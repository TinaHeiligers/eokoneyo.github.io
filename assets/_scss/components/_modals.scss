
:root {
  // close button
  --modal-close-btn-size: 1.25em;
  --modal-close-btn-padding: var(--space-sm);
}

.modal {
  position: fixed;
  z-index: $zindex-overlay;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  justify-content: center;
  align-items: center;
  background-color: rgba($primary, 0.75);
  -webkit-backdrop-filter: blur(mq-px2em(10px));
  backdrop-filter: blur(mq-px2em(10px));
  // hide element
  opacity: 0;
  visibility: hidden;
  display: none;
  pointer-events: none;

  &--is-visible {
    opacity: 1;
    display: flex;
    visibility: visible;
    pointer-events: auto;
  }

  &__content {
    top: 10%;
    width: 90%;
    margin: auto;
    max-height: 80%;
    display: flex;
    flex-direction: column;
    position: fixed;

    @include mq($from: medium) {
      width: mq-px2em(720px);
    }

    // if close btn is inside content (e.g, inside header)
    .modal__close-btn { // alt close btn style (if inside modal content)
      --modal-close-btn-size: 1em;
      --modal-close-btn-padding: 0.5em;
      position: static;
      flex-shrink: 0;
      background-color: var(--color-bg);
      box-shadow: var(--shadow-sm);
      transition: .2s;

      .icon {
        color: inherit;
      }

      &:hover {
        box-shadow: var(--shadow-md);

        .icon {
          color: var(--color-contrast-higher);
        }
      }
    }

    // close btn sticky within content
    .modal__close-btn--sticky {
      position: sticky;
      float: right;
      top: 0;
      right: 0;
    }
  }

  &__close-btn {
    position: fixed;
    top: var(--space-sm);
    right: var(--space-sm);
    z-index: $zindex-fixed-element;
    padding: var(--modal-close-btn-padding);
    border-radius: 50%;
    border: 0;
    background-color: rgba($light, 0.8);
    transition: .2s;
    cursor: pointer;

    &:hover {
      background-color: $light;
    }

    .icon {
      display: block;
      color: var(--color-bg);
      width: var(--modal-close-btn-size);
      height: var(--modal-close-btn-size);
    }
  }

  // if animation = enabled
  &[data-animation="on"] {
    transition: opacity .3s, visibility .3s;

    .modal__content {
      will-change: transform;
      transition: transform .3s var(--ease-out);
      transform: translateY(10%);
    }

    &.modal--is-visible .modal__content {
      transform: translateY(0);
    }
  }
}
